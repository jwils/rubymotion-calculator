<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' name='PXStylesheetDidChangeNotification' const='true' type='@'/>
<enum value='0' name='PXCacheStylesTypeAuto'/>
<enum value='1' name='PXCacheStylesTypeNone'/>
<enum value='1' name='PXParseErrorDestinationConsole'/>
<enum value='0' name='PXParseErrorDestinationNone'/>
<enum value='0' name='PXStylesheetOriginApplication'/>
<enum value='3' name='PXStylesheetOriginInline'/>
<enum value='1' name='PXStylesheetOriginUser'/>
<enum value='2' name='PXStylesheetOriginView'/>
<enum value='0' name='PXUpdateStylesTypeAuto'/>
<enum value='1' name='PXUpdateStylesTypeManual'/>
<enum value='0' name='kAlignViewPortNone'/>
<enum value='9' name='kAlignViewPortXMaxYMax'/>
<enum value='8' name='kAlignViewPortXMaxYMid'/>
<enum value='7' name='kAlignViewPortXMaxYMin'/>
<enum value='6' name='kAlignViewPortXMidYMax'/>
<enum value='5' name='kAlignViewPortXMidYMid'/>
<enum value='4' name='kAlignViewPortXMidYMin'/>
<enum value='3' name='kAlignViewPortXMinYMax'/>
<enum value='2' name='kAlignViewPortXMinYMid'/>
<enum value='1' name='kAlignViewPortXMinYMin'/>
<enum value='0' name='kCropTypeMeet'/>
<enum value='1' name='kCropTypeSlice'/>
<enum value='4' name='kDimensionTypeCentimeters'/>
<enum value='9' name='kDimensionTypeDegrees'/>
<enum value='3' name='kDimensionTypeDevicePixels'/>
<enum value='0' name='kDimensionTypeEms'/>
<enum value='1' name='kDimensionTypeExs'/>
<enum value='11' name='kDimensionTypeGradians'/>
<enum value='14' name='kDimensionTypeHertz'/>
<enum value='6' name='kDimensionTypeInches'/>
<enum value='15' name='kDimensionTypeKilohertz'/>
<enum value='5' name='kDimensionTypeMillimeters'/>
<enum value='12' name='kDimensionTypeMilliseconds'/>
<enum value='16' name='kDimensionTypePercentage'/>
<enum value='8' name='kDimensionTypePicas'/>
<enum value='2' name='kDimensionTypePixels'/>
<enum value='7' name='kDimensionTypePoints'/>
<enum value='10' name='kDimensionTypeRadians'/>
<enum value='13' name='kDimensionTypeSeconds'/>
<enum value='17' name='kDimensionTypeUserDefined'/>
<enum value='0' name='kStrokeTypeCenter'/>
<enum value='1' name='kStrokeTypeInner'/>
<enum value='2' name='kStrokeTypeOuter'/>
<class name='NSDictionary'>
<method selector='toCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='applyFillToPath:withContext:'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyInsetToPath:withContext:'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyOutsetToPath:withContext:'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStrokeToPath:withContext:'>
<arg declared_type='CGPathRef' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='CGContextRef' index='1' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeValueForName:withNamespace:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='namespace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='bounds'>
<retval declared_type='int' type='i'/>
</method>
<method selector='clippingPath'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method selector='defaultPseudoClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='id' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='int' type='i'/>
</method>
<method selector='isVirtualControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='opacity'>
<retval declared_type='int' type='i'/>
</method>
<method selector='parent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pxStyleChildren'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleNamespace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='render:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImageWithBounds:'>
<arg declared_type='id' index='0' name='bounds' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='int' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='int' index='0' name='bounds' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClippingPath:'>
<arg declared_type='PXShape*' index='0' name='clippingPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg declared_type='id' index='0' name='fill' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='int' index='0' name='frame' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='int' index='0' name='opacity' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg declared_type='id' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg declared_type='id' index='0' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke:'>
<arg declared_type='id' index='0' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCSS:'>
<arg declared_type='NSString*' index='0' name='styleCSS' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg declared_type='NSString*' index='0' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg declared_type='NSString*' index='0' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='int' index='0' name='transform' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stroke'>
<retval declared_type='id' type='@'/>
</method>
<method selector='styleCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportedPseudoClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='int' type='i'/>
</method>
<method selector='updateStyles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursively'>
<retval declared_type='void' type='v'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='PXArc'>
<method selector='center'>
<retval declared_type='int' type='i'/>
</method>
<method selector='endingAngle'>
<retval declared_type='int' type='i'/>
</method>
<method selector='radius'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setCenter:'>
<arg declared_type='int' index='0' name='center' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndingAngle:'>
<arg declared_type='int' index='0' name='endingAngle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='int' index='0' name='radius' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartingAngle:'>
<arg declared_type='int' index='0' name='startingAngle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startingAngle'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXCircle'>
<method selector='center'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='circleWithCenter:withRadius:'>
<arg declared_type='id' index='0' name='center' type='@'/>
<arg declared_type='id' index='1' name='radius' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radius:'>
<arg declared_type='id' index='0' name='center' type='@'/>
<arg declared_type='id' index='1' name='radius' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radius'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setCenter:'>
<arg declared_type='int' index='0' name='center' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='int' index='0' name='radius' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXCornerRadius'>
<method selector='bottomLeft'>
<retval declared_type='int' type='i'/>
</method>
<method selector='bottomRight'>
<retval declared_type='int' type='i'/>
</method>
<method selector='hasRadius'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRadius:'>
<arg declared_type='id' index='0' name='radius' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRadiusSize:'>
<arg declared_type='id' index='0' name='radii' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRadiusX:radiusY:'>
<arg declared_type='id' index='0' name='radiusX' type='@'/>
<arg declared_type='id' index='1' name='radiusY' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTopLeft:topRight:bottomRight:bottomLeft:'>
<arg declared_type='id' index='0' name='topLeft' type='@'/>
<arg declared_type='id' index='1' name='topRight' type='@'/>
<arg declared_type='id' index='2' name='bottomRight' type='@'/>
<arg declared_type='id' index='3' name='bottomLeft' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTopLeftSize:topRight:bottomRight:bottomLeft:'>
<arg declared_type='id' index='0' name='topLeft' type='@'/>
<arg declared_type='id' index='1' name='topRight' type='@'/>
<arg declared_type='id' index='2' name='bottomRight' type='@'/>
<arg declared_type='id' index='3' name='bottomLeft' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='topLeft'>
<retval declared_type='int' type='i'/>
</method>
<method selector='topRight'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXDimension'>
<method selector='degrees'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='dimension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dimensionWithNumber:withDimension:'>
<arg declared_type='id' index='0' name='number' type='@'/>
<arg declared_type='NSString*' index='1' name='dimension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNumber:withDimension:'>
<arg declared_type='id' index='0' name='number' type='@'/>
<arg declared_type='NSString*' index='1' name='dimension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAngle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrequency'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLength'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPercentage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserDefined'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='number'>
<retval declared_type='int' type='i'/>
</method>
<method selector='points'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='PXDimensionType' type='i'/>
</method>
</class>
<class name='PXEllipse'>
<method selector='center'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='ellipseWithCenter:withRadiusX:withRadiusY:'>
<arg declared_type='id' index='0' name='center' type='@'/>
<arg declared_type='id' index='1' name='radiusX' type='@'/>
<arg declared_type='id' index='2' name='radiusY' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radiusX:radiusY:'>
<arg declared_type='id' index='0' name='center' type='@'/>
<arg declared_type='id' index='1' name='radiusX' type='@'/>
<arg declared_type='id' index='2' name='radiusY' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radiusX'>
<retval declared_type='int' type='i'/>
</method>
<method selector='radiusY'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setCenter:'>
<arg declared_type='int' index='0' name='center' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusX:'>
<arg declared_type='int' index='0' name='radiusX' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusY:'>
<arg declared_type='int' index='0' name='radiusY' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXEngine'>
<method class_method='true' selector='applyStylesheets'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='buildDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentApplicationStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentUserStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentViewStylesheet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='licenseEmail'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey:forUser:'>
<arg declared_type='NSString*' index='0' name='licenseKey' type='@'/>
<arg declared_type='NSString*' index='1' name='licenseEmail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='matchingDeclarationsForStyleable:'>
<arg declared_type='id' index='0' name='styleable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='matchingRuleSetsForStyleable:'>
<arg declared_type='id' index='0' name='styleable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='refreshStylesWithOrientationChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='selectFromStyleable:usingSelector:'>
<arg declared_type='id' index='0' name='styleable' type='@'/>
<arg declared_type='NSString*' index='1' name='source' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='setRefreshStylesWithOrientationChange:'>
<arg declared_type='BOOL' index='0' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='styleSheetFromFilePath:withOrigin:'>
<arg declared_type='NSString*' index='0' name='filePath' type='@'/>
<arg declared_type='id' index='1' name='origin' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='styleSheetFromSource:withOrigin:'>
<arg declared_type='NSString*' index='0' name='source' type='@'/>
<arg declared_type='id' index='1' name='origin' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='titaniumMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='updateStyles:'>
<arg declared_type='id' index='0' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesNonRecursively:'>
<arg declared_type='id' index='0' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='version'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PXEngineConfiguration'>
<method selector='cacheStylesType'>
<retval declared_type='PXCacheStylesType' type='i'/>
</method>
<method selector='parseErrorDestination'>
<retval declared_type='PXParseErrorDestination' type='i'/>
</method>
<method selector='propertyValueForName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sendParseMessage:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheStylesType:'>
<arg declared_type='PXCacheStylesType' index='0' name='cacheStylesType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParseErrorDestination:'>
<arg declared_type='PXParseErrorDestination' index='0' name='parseErrorDestination' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValue:forName:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg declared_type='NSString*' index='0' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg declared_type='NSString*' index='0' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateStylesType:'>
<arg declared_type='PXUpdateStylesType' index='0' name='updateStylesType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='updateStylesType'>
<retval declared_type='PXUpdateStylesType' type='i'/>
</method>
</class>
<class name='PXGradient'>
<method selector='addColor:'>
<arg declared_type='id' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addColor:withOffset:'>
<arg declared_type='id' index='0' name='color' type='@'/>
<arg declared_type='id' index='1' name='offset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colors'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='gradient'>
<retval declared_type='int' type='i'/>
</method>
<method selector='offsets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setColors:'>
<arg declared_type='NSMutableArray*' index='0' name='colors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsets:'>
<arg declared_type='NSMutableArray*' index='0' name='offsets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='int' index='0' name='transform' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXLine'>
<method selector='initX1:y1:x2:y2:'>
<arg declared_type='id' index='0' name='x1' type='@'/>
<arg declared_type='id' index='1' name='y1' type='@'/>
<arg declared_type='id' index='2' name='x2' type='@'/>
<arg declared_type='id' index='3' name='y2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='int' type='i'/>
</method>
<method selector='p2'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setP1:'>
<arg declared_type='int' index='0' name='p1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg declared_type='int' index='0' name='p2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXLinearGradient'>
<method selector='angle'>
<retval declared_type='int' type='i'/>
</method>
<method selector='cssAngle'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='gradientFromStartColor:endColor:'>
<arg declared_type='id' index='0' name='startColor' type='@'/>
<arg declared_type='id' index='1' name='endColor' type='@'/>
<retval declared_type='PXLinearGradient*' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='int' type='i'/>
</method>
<method selector='p2'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setAngle:'>
<arg declared_type='int' index='0' name='angle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCssAngle:'>
<arg declared_type='int' index='0' name='cssAngle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP1:'>
<arg declared_type='int' index='0' name='p1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg declared_type='int' index='0' name='p2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXMargin'>
<method selector='bottom'>
<retval declared_type='int' type='i'/>
</method>
<method selector='hasMargin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTop:right:bottom:left:'>
<arg declared_type='id' index='0' name='top' type='@'/>
<arg declared_type='id' index='1' name='right' type='@'/>
<arg declared_type='id' index='2' name='bottom' type='@'/>
<arg declared_type='id' index='3' name='left' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='left'>
<retval declared_type='int' type='i'/>
</method>
<method selector='right'>
<retval declared_type='int' type='i'/>
</method>
<method selector='top'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXPaintGroup'>
<method selector='addPaint:'>
<arg declared_type='id' index='0' name='paint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXPath'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='createPathFromPathData:'>
<arg declared_type='NSString*' index='0' name='data' type='@'/>
<retval declared_type='PXPath*' type='@'/>
</method>
<method selector='cubicBezierToX1:y1:x2:y2:x3:y3:'>
<arg declared_type='id' index='0' name='x1' type='@'/>
<arg declared_type='id' index='1' name='y1' type='@'/>
<arg declared_type='id' index='2' name='x2' type='@'/>
<arg declared_type='id' index='3' name='y2' type='@'/>
<arg declared_type='id' index='4' name='x3' type='@'/>
<arg declared_type='id' index='5' name='y3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lineToX:y:'>
<arg declared_type='id' index='0' name='x' type='@'/>
<arg declared_type='id' index='1' name='y' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToX:y:'>
<arg declared_type='id' index='0' name='x' type='@'/>
<arg declared_type='id' index='1' name='y' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quadraticBezierToX1:y1:x2:y2:'>
<arg declared_type='id' index='0' name='x1' type='@'/>
<arg declared_type='id' index='1' name='y1' type='@'/>
<arg declared_type='id' index='2' name='x2' type='@'/>
<arg declared_type='id' index='3' name='y2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXPolygon'>
<method selector='closed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPoints:'>
<arg declared_type='NSArray*' index='0' name='points' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setClosed:'>
<arg declared_type='BOOL' index='0' name='closed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPoints:'>
<arg declared_type='NSArray*' index='0' name='points' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXRadialGradient'>
<method selector='endCenter'>
<retval declared_type='int' type='i'/>
</method>
<method selector='radius'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setEndCenter:'>
<arg declared_type='int' index='0' name='endCenter' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='int' index='0' name='radius' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartCenter:'>
<arg declared_type='int' index='0' name='startCenter' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startCenter'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXRectangle'>
<method selector='cornerRadius'>
<retval declared_type='PXCornerRadius*' type='@'/>
</method>
<method selector='height'>
<retval declared_type='int' type='i'/>
</method>
<method selector='initWithRect:'>
<arg declared_type='id' index='0' name='bounds' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='PXCornerRadius*' index='0' name='cornerRadius' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='int' index='0' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='int' index='0' name='size' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='int' index='0' name='width' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setX:'>
<arg declared_type='int' index='0' name='x' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setY:'>
<arg declared_type='int' index='0' name='y' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='int' type='i'/>
</method>
<method selector='width'>
<retval declared_type='int' type='i'/>
</method>
<method selector='x'>
<retval declared_type='int' type='i'/>
</method>
<method selector='y'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXSVGLoader'>
<method selector='addEndSelector:forElement:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<arg declared_type='NSString*' index='1' name='elementName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addShape:'>
<arg declared_type='PXShape*' index='0' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addStartSelector:forElement:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<arg declared_type='NSString*' index='1' name='elementName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStyles:forShape:'>
<arg declared_type='NSDictionary*' index='0' name='attributeDict' type='@'/>
<arg declared_type='PXShape*' index='1' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='loadFromURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='PXScene*' type='@'/>
</method>
<method class_method='true' selector='loaderClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='numberFromString:'>
<arg declared_type='NSString*' index='0' name='attributeValue' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='setLoaderClass:'>
<arg declared_type='Class' index='0' name='class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXScene'>
<method selector='addShape:forName:'>
<arg declared_type='id' index='0' name='shape' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bounds'>
<retval declared_type='int' type='i'/>
</method>
<method selector='parentView'>
<retval declared_type='PXShapeView*' type='@'/>
</method>
<method selector='setBounds:'>
<arg declared_type='int' index='0' name='bounds' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentView:'>
<arg declared_type='PXShapeView*' index='0' name='parentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShape:'>
<arg declared_type='id' index='0' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shape'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeForName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXShadow'>
<method selector='blendMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='blurDistance'>
<retval declared_type='int' type='i'/>
</method>
<method selector='color'>
<retval declared_type='int*' type='^i'/>
</method>
<method selector='horizontalOffset'>
<retval declared_type='int' type='i'/>
</method>
<method selector='inset'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='int' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlurDistance:'>
<arg declared_type='int' index='0' name='blurDistance' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='int*' index='0' name='color' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalOffset:'>
<arg declared_type='int' index='0' name='horizontalOffset' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInset:'>
<arg declared_type='BOOL' index='0' name='inset' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpreadDistance:'>
<arg declared_type='int' index='0' name='spreadDistance' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalOffset:'>
<arg declared_type='int' index='0' name='verticalOffset' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spreadDistance'>
<retval declared_type='int' type='i'/>
</method>
<method selector='verticalOffset'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PXShadowGroup'>
<method selector='addShadowPaint:'>
<arg declared_type='id' index='0' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='shadows'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='PXShape'>
<method selector='clearPath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='newPath'>
<retval declared_type='id' type='@'/>
</method>
<method selector='owningScene'>
<retval declared_type='PXScene*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='int' type='i'/>
</method>
<method selector='renderChildren:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXShapeGroup'>
<method selector='addShape:'>
<arg declared_type='id' index='0' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='removeShape:'>
<arg declared_type='id' index='0' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewport:'>
<arg declared_type='CGRect' index='0' name='viewport' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportAlignment:'>
<arg declared_type='AlignViewPortType' index='0' name='viewportAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportCrop:'>
<arg declared_type='CropType' index='0' name='viewportCrop' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shapeAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='viewPortTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='viewport'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='viewportAlignment'>
<retval declared_type='AlignViewPortType' type='i'/>
</method>
<method selector='viewportCrop'>
<retval declared_type='CropType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXShapeView'>
<method selector='applyBoundsToScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadSceneFromURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='scene'>
<retval declared_type='PXScene*' type='@'/>
</method>
<method selector='setResourcePath:'>
<arg declared_type='NSString*' index='0' name='resourcePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScene:'>
<arg declared_type='PXScene*' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXSolidPaint'>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='paintWithColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStroke'>
<method selector='color'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dashArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='dashOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithStrokeWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='newStrokedPath:'>
<arg declared_type='CGPathRef' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='setColor:'>
<arg declared_type='id' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashArray:'>
<arg declared_type='NSArray*' index='0' name='dashArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashOffset:'>
<arg declared_type='CGFloat' index='0' name='dashOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg declared_type='CGLineCap' index='0' name='lineCap' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg declared_type='CGLineJoin' index='0' name='lineJoin' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='miterLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='PXStrokeType' index='0' name='type' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='PXStrokeType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXStrokeGroup'>
<method selector='addStroke:'>
<arg declared_type='id' index='0' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStrokeStroke'>
<method selector='setStrokeEffect:'>
<arg declared_type='PXStroke*' index='0' name='strokeEffect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeToApply:'>
<arg declared_type='id' index='0' name='strokeToApply' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeEffect'>
<retval declared_type='PXStroke*' type='@'/>
</method>
<method selector='strokeToApply'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXStylesheet'>
<method selector='errors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='monitorChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='origin'>
<retval declared_type='PXStylesheetOrigin' type='i'/>
</method>
<method selector='setErrors:'>
<arg declared_type='NSArray*' index='0' name='errors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg declared_type='NSString*' index='0' name='filePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorChanges:'>
<arg declared_type='BOOL' index='0' name='monitorChanges' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXVector'>
<method selector='add:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angleBetweenVector:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cross:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='divide:'>
<arg declared_type='CGFloat' index='0' name='scalar' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='dot:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithX:Y:'>
<arg declared_type='CGFloat' index='0' name='x' type='f'/>
<arg declared_type='CGFloat' index='1' name='y' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='magnitude'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='multiply:'>
<arg declared_type='CGFloat' index='0' name='scalar' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perp'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perpendicular:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='projectOnto:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='subtract:'>
<arg declared_type='PXVector*' index='0' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='unit'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method class_method='true' selector='vectorWithStartPoint:EndPoint:'>
<arg declared_type='CGPoint' index='0' name='p1' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='p2' type='{CGPoint=ff}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:'>
<arg declared_type='CGFloat' index='0' name='x' type='f'/>
<arg declared_type='CGFloat' index='1' name='y' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleParent:'>
<arg declared_type='id' index='0' name='pxStyleParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIColor'>
<method class_method='true' selector='colorFromName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithARGBValue:'>
<arg declared_type='uint' index='0' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:'>
<arg declared_type='NSString*' index='0' name='hexString' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:withAlpha:'>
<arg declared_type='NSString*' index='0' name='hexString' type='@'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f'/>
<arg declared_type='CGFloat' index='2' name='lightness' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f'/>
<arg declared_type='CGFloat' index='2' name='lightness' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBAValue:'>
<arg declared_type='uint' index='0' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBValue:'>
<arg declared_type='uint' index='0' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='getHue:saturation:lightness:alpha:'>
<arg declared_type='CGFloat*' index='0' name='hue' type='^f'/>
<arg declared_type='CGFloat*' index='1' name='saturation' type='^f'/>
<arg declared_type='CGFloat*' index='2' name='lightness' type='^f'/>
<arg declared_type='CGFloat*' index='3' name='alpha' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleParent:'>
<arg declared_type='id' index='0' name='pxStyleParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='PXBoundable'>
<method selector='bounds' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setBounds:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='bounds' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaint'>
<method selector='applyFillToPath:withContext:' type='v16@0:4@8@12'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='blendMode' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setBlendMode:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaintable'>
<method selector='clippingPath' type='@8@0:4'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method selector='fill' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setClippingPath:' type='v12@0:4@8'>
<arg declared_type='PXShape*' index='0' name='clippingPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='fill' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='opacity' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stroke' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visible' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='PXRenderable'>
<method selector='parent' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='render:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImageWithBounds:' type='@12@0:4@8'>
<arg declared_type='id' index='0' name='bounds' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setParent:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='transform' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
</informal_protocol>
<informal_protocol name='PXShadowPaint'>
<method selector='applyInsetToPath:withContext:' type='v16@0:4@8@12'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyOutsetToPath:withContext:' type='v16@0:4@8@12'>
<arg declared_type='id' index='0' name='path' type='@'/>
<arg declared_type='id' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXStrokeRenderer'>
<method selector='applyStrokeToPath:withContext:' type='v16@0:4^{CGPath=}8^{CGContext=}12'>
<arg declared_type='CGPathRef' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='CGContextRef' index='1' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXStyleable'>
<method selector='attributeValueForName:withNamespace:' type='@16@0:4@8@12'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='namespace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bounds' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='defaultPseudoClass' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='frame' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='pxStyleChildren' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pxStyleElementName' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleNamespace' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBounds:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='bounds' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:' type='v12@0:4i8'>
<arg declared_type='int' index='0' name='frame' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCSS:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='styleCSS' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleCSS' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportedPseudoClasses' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='updateStyles' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursively' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXVirtualControl'>
<method selector='isVirtualControl' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
